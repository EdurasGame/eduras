<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">
<article>
	<articleinfo>
		<title>Chat</title>
		<author>
			<firstname>Florian</firstname>
			<surname>Mai</surname>
		</author>
	</articleinfo>
	<section>
	    <title>What's this about?</title>
	    <para>
	        Being able to communicate with other users is critical to a social application and an online multiplayer game and especially Eduras is such an application.
	        A chat is the most common, most popular and easiest to implement way of communication. Sooner or later users will want to talk to others before playing,
	        while playing and after playing. They will want both to participate in public chat discussions and have private conversations within their own groups.
	        To address all these requirements this document discusses the needs of a chat application.
	    </para>
	</section>
	<section>
	    <title>(jme) Risks and challenges</title>
	    <para>
	    	To provide an authentic chat system, it must be ensured that communication is
	    	encrypted as well as users can not pretend they are someone else.
	        This leads to a complete friend system being required.
	    </para>
	    <para>
	        In addition to that, we might think of how the user can use the chat system
	        while actually playing.
	    </para>
	</section>
	<section>
	    <title>Features</title>
	    <para>
	        A chat application that fits Eduras' needs will need to provide the following features:
	    </para>
	    <itemizedlist>
	        <listitem>
	            <para>
	                Set a user's name dynamically.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                Create new chatrooms (both private and public rooms)
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                Join and participate multiple chatrooms at once
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                Invite other users to private and public chatrooms.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                Get information about other users in the same chatroom.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                (jme) A friend system that allows keeping tracks of your
	                friends and being notified when someone goes online.(/jme)
	            </para>
	        </listitem>
	    </itemizedlist>
	</section>
	<section>
	    <title>API</title>
	    <para>
	        (jme) We might elaborate whether some events should get a timestamp attached
	        in order to preserve the same chat message times on both clients. (/jme)
	    </para>
	    <para>
	        The chat application will use the Eventing Server with the following Events:
	    </para>
	    <table frame="all">
			<title>Server-Events</title>
			<tgroup cols="7">
				<thead>
					<row>
						<entry>Event</entry>
						<entry>Id=arg0</entry>
						<entry>Description</entry>
						<entry>arg1</entry>
						<entry>arg2</entry>
						<entry>arg3</entry>
						<entry>arg4</entry>
					</row>
				</thead>
				<tbody>
					<row>
					    <entry>NEW_MESSAGE</entry>
					    <entry>1</entry>
					    <entry>Indicates that a new message has been send. The message will be shown to all users who are in the chatroom where the message was sent.</entry>
					    <entry>Id of sending user</entry>
					    <entry>Id of room</entry>
					    <entry>Message</entry>
					</row>
					<row>
					    <entry>NAME_CHANGED</entry>
					    <entry>2</entry>
					    <entry>Indicates that a user changed its name. Will be shown to every user that is in a channel in which the name changing user is too.</entry>
					    <entry>id of name changing user</entry>
					    <entry>new name</entry>
					</row>
					<row>
					    <entry>INVITE_TO_ROOM</entry>
					    <entry>3</entry>
					    <entry>Indicates that someone invited you to a chatroom</entry>
					    <entry>Id of inviting user</entry>
					    <entry>Id of room the user was invited to</entry>
					</row>
					<row>
					    <entry>ROOM_CREATE</entry>
					    <entry>4</entry>
					    <entry>Indicates that a user has successfully created a room.</entry>
					    <entry>Name of the newly created room.</entry>
					    <entry>The id of the new room.</entry>
					    <entry>Flag indicating whether the room is public or not.</entry>
					</row>
					<row>
					    <entry>CONFIRM_ROOM_JOIN</entry>
					    <entry>5</entry>
					    <entry>Indicates that a user has successfully joined a room.</entry>
					    <entry>Id of the room.</entry>
					</row>
					<row>
					    <entry>USER_CREATED</entry>
					    <entry>6</entry>
					    <entry>Indicates that a user has been created.</entry>
					    <entry>Id of the newly created user.</entry>
					</row>
					<row>
					    <entry>USER_REMOVED</entry>
					    <entry>7</entry>
					    <entry>Indicates that a user has been removed from the server.</entry>
					    <entry>Id of the user who has been removed</entry>
					</row>
					<row>
					    <entry>ROOM_REMOVED</entry>
					    <entry>8</entry>
					    <entry>Indicates that a room has been removed from the server.</entry>
					    <entry>Id of the room which has been removed</entry>
					</row>
					<row>
					    <entry>USER_JOINED_ROOM</entry>
					    <entry>10</entry>
					    <entry>Indicates that the user with the given id joined the room.
					        Will be send to all users.</entry>
					    <entry>The id of the user that joined.</entry>
					    <entry>The id of the room the user joined.</entry>
					</row>
					<row>
					    <entry>(jme) USER_LEFT_ROOM</entry>
					    <entry>11</entry>
					    <entry>Indicates that the user with the given id left the room.
					        Will be send to all users in that room.</entry>
					    <entry>The id of the user that left.</entry>
					    <entry>The id of the room the user left.</entry>
					</row>
					<row>
					    <entry>(jme) FRIEND_ONLINE</entry>
					    <entry>12</entry>
					    <entry>Indicates that a friend went online</entry>
					    <entry>The id of the friend.</entry>
					</row>
					<row>
					    <entry>(jme) FRIEND_OFFLINE</entry>
					    <entry>13</entry>
					    <entry>Indicates that a friend is now offline</entry>
					    <entry>The id of the friend.</entry>
					</row>
					<row>
					    <entry>(jme) NEW_FRIENDREQUEST</entry>
					    <entry>14</entry>
					    <entry>Indicates that a user sent a friendrequest.</entry>
					    <entry>The id of the requesting user.</entry>
					    <entry>The id of the user that is requested to be friend.</entry>
					    <entry>An optional message that is send to the user.</entry>
					</row>
					<row>
					    <entry>(jme) SET_FRIENDS</entry>
					    <entry>15</entry>
					    <entry>Sets two users as friends (as result of an accepted friend request).</entry>
					    <entry>The id of the first user.</entry>
					    <entry>The id of the second user.</entry>
					</row>
					<row>
					    <entry>(jme) SET_NOFRIENDS</entry>
					    <entry>16</entry>
					    <entry>Sets two users as no longer friends.</entry>
					    <entry>The id of the first user.</entry>
					    <entry>The id of the second user.</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<table frame="all">
			<title>Client-Events</title>
			<tgroup cols="7">
				<thead>
					<row>
						<entry>Event</entry>
						<entry>Id=arg0</entry>
						<entry>Description</entry>
						<entry>arg1</entry>
						<entry>arg2</entry>
						<entry>arg3</entry>
					</row>
				</thead>
				<tbody>
					<row>
					    <entry>SEND_MESSAGE</entry>
					    <entry>20</entry>
					    <entry>Notify the server that the user wants to send a message in a chatroom</entry>
					    <entry>id of user who is sending the message</entry>
					    <entry>id of the room in which the message is sent.</entry>
					    <entry>message</entry>
					</row>
					<row>
					    <entry>SET_NAME</entry>
					    <entry>21</entry>
					    <entry>Notify the server that the user wants to change its name</entry>
					    <entry>id of user who wants to change its name</entry>
					    <entry>new name</entry>
					</row>
					<row>
					    <entry>CREATE_ROOM</entry>
					    <entry>22</entry>
					    <entry>Indicates that the user wants to create a new room.
					        If a room with the given name already exists, it won't be created.</entry>
					    <entry>id of the user</entry>
					    <entry>name of the room that shall be created</entry>
					</row>
					<row>
					    <entry>JOIN_ROOM</entry>
					    <entry>23</entry>
					    <entry>Indicates that the user wants to join a room.</entry>
					    <entry>Id of the user who wants to join a room</entry>
					    <entry>id of the room the user would like to join</entry>
					</row>
					<row>
					    <entry>INVITE_USER</entry>
					    <entry>24</entry>
					    <entry>Indicates that the user wants to invite another user to its room.
					        The server has to decide whether the client is eligible to send an invite.</entry>
					    <entry>The id of the inviting user.</entry>
					    <entry>Id of the invited user.</entry>
					    <entry>Id of the room</entry>
					</row>
					<row>
					    <entry>ACCEPT_INVITE</entry>
					    <entry>27</entry>
					    <entry>Indicates that the user would like to accept an invite</entry>
					    <entry>The accepting user's id.</entry>
					    <entry>The id of the room it was invited to join.</entry>
					</row>
					<row>
					    <entry>(jme) SEND_FRIENDREQUEST</entry>
					    <entry>30</entry>
					    <entry>Sends a request to add the user with given id as friend.</entry>
					    <entry>The id of the requesting user.</entry>
					    <entry>The id of the user that should be added.</entry>
					    <entry>An optional message that is send to the user.</entry>
					</row>
					<row>
					    <entry>(jme) ACCEPT_FRIENDREQUEST</entry>
					    <entry>31</entry>
					    <entry>Answers a friend request.</entry>
					    <entry>The id of the answering user.</entry>
					    <entry>The id of the user that should be confirmed.</entry>
					    <entry>ACCEPT/DECLINE</entry>
					</row>
					<row>
					    <entry>(jme) REMOVE_FRIEND</entry>
					    <entry>32</entry>
					    <entry>Sends a request to remove the user with given id as friend.</entry>
					    <entry>The id of the removing user.</entry>
					    <entry>The id of the user being removed</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</section>
</article>