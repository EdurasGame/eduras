<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">
<article>
	<articleinfo>
		<title>Game graphics</title>
	</articleinfo>
	<section>
		<title>(jme) Sprites</title>
		<para>
			A sprite (or sprite-sheet) is an image that is tiled into many equal parts where each part contains an independend graphic.
			Sprites are commonly used in computer games with two-dimensional graphic resources. It's often used to create animations
			where each frame of animation is in one tile. You can also use it to store different roations of a unit. Generally, you can
			combine any images into a spritre-sheet, it is not necessary they have anything in common. You can even use transparency
			within a sprite-sheet. Detailed information on sprite creation are below.
		</para>
		<figure>
            <title>A very simple sprite containing 16 different shapes with different colors.</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/testsprite.png" format="PNG" />
                </imageobject>
            </mediaobject>
        </figure>
        <section>
            <title>Sprite creation</title>
            <para>
                To create a sprite-sheet you can use any simple image editing tool. We recommend using <ulink url="http://www.gimp.org/">Gimp</ulink>
                for image editing. Gimp is a very powerful tool that supports many useful features like layers. In addition to that, it's totally
                free and runs on linux systems, too. If you need a vector-tool for creating your images, we recommend
                <ulink url="http://inkscape.org/">Inkscape</ulink>. It's open source and full of nice features.
            </para>
            <para>
                Before creating a sprite-sheet, you should brainstorm some important information:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>How many tiles will I need?</emphasis> This depends on your usage. For example if you create a sprite-sheet for
                        a unit, you will need one tile for every direction the unit can look at.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Do they fit together in matters of content?</emphasis> It does not make sense to put a unit-picture and a ward-totem
                        together. But combining different weapon models is way better.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Are the tiles equal-sized?</emphasis> Sprite-sheets use equal-sized tiles. It is inefficient to pack very
                        different sized images together because you will lose a lot of time cutting your small image out of a big tile.
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                Now it is time to create your sprite-sheet. Start creating a blank image with sufficient size. It is optimal using a square sprite-sheet.
                To calculate your image size, you can use following formula: <computeroutput>width = tileWidth * tilesPerRow,
                height = tileHeight * tilesPerColumn</computeroutput>. Make sure you add an alpha-channel if you don't want to see white blocks around
                your images.
                To simplyfy sprite-alignment, you can make gimp show you a customized grid.
                To do so, go to menu <computeroutput>Bild -> Raster konfigurieren</computeroutput>. In the following dialog (see image below) set
                <computeroutput>Abstand</computeroutput> to your tile size. You can now display raster by
                <computeroutput>Ansicht -> Raster anzeigen</computeroutput>. Now raster-cells repesent your tiles.
            </para>
            <figure>
	            <title>Raster configuration dialog.</title>
	            <mediaobject>
	                <imageobject>
	                    <imagedata fileref="images/configure-raster.png" format="PNG" />
	                </imageobject>
	            </mediaobject>
        	</figure>
        </section>
        <section>
            <title>Using sprites</title>
            <para>
                To provide an easy use of sprite-sheets, you can use the <computeroutput>SpriteSheet</computeroutput> class.
                It cuts your spritesheet into individual tiles automatically.
                For detailed usage information, please consider its JavaDoc.
            </para>
        </section>
        <section>
            <title>Implementation</title>
            <para>
                Tiles are addressed using their internal tile-number (blue numbers). Tiles are numerated ascending from left to right
                line by line. Consider illustration below to get a clear overview about the stucture of a sprite. Note that a final sprite
                does not contain borders separating tiles.
                Computing the coordinates of an image-part that represents a specific tile is quite easy if you know width and height of
                a single tile.
            </para>
            <figure>
	            <title>Structure of a sprite. Blue numbers representate internal numeration, red numbers image pixels.</title>
	            <mediaobject>
	                <imageobject>
	                    <imagedata fileref="images/sprite-usage.png" format="PNG" />
	                </imageobject>
	            </mediaobject>
	        </figure>
        </section>
	</section>
	
</article>